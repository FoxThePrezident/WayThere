 @startuml
'https://plantuml.com/class-diagram
'I used symbol ~ for indicating that that method is overridden
!pragma useIntermediatePackages false

<style>
    .1 {
        BackgroundColor GreenYellow
    }
    .2 {
        BackgroundColor Chartreuse
    }
    .3 {
        BackgroundColor Lime
    }
</style>

package com.waywardTeam.wayward <<1>> {
    class WelcomeScreen {
        ~onCreate(): Void
        -request(): Void
        -next(): Void
        ~onRequestPermissionsResult(): Void
    }
    WelcomeScreen -left- RouteSearchActivity

    class RouteSearchActivity {
        -mapToPositionCode: Int
        -mapFromPositionCode: Int
        -byArrive: Boolean
        -fromLatLng: LatLng
        -toLatLng: LatLng
        -fromLocation: String
        -toLocation: String
        -arrivalTime: LocalTime
        -text: Text
        -options: Options
        -button: Buttons
        -loading: ProgressBar
        -convert: Convert
        -internet: Internet
        -database: Database
        -fileManager: FileManager
        -notification: Notification
        -miscellaneous: Miscellaneous
        -userSettings: UserSettings

        ~onCreate(): Void
        -RouteSearchActivity.buttonClickListener()
        -searchRoute(): Void
        -processData(): Void
        -getData(): Transportation[]
    }
    RouteSearchActivity -right- MapActivity
    RouteSearchActivity -- utilities.Convert
    RouteSearchActivity -- utilities.Database
    RouteSearchActivity -- utilities.Internet
    RouteSearchActivity -- utilities.Trimming
    RouteSearchActivity -- utilities.FileManager
    RouteSearchActivity -- utilities.Notification
    RouteSearchActivity -- utilities.Miscellaneous
    RouteSearchActivity -- utilities.dataClasses.Stop
    RouteSearchActivity -- utilities.dataClasses.MapData
    RouteSearchActivity -- utilities.dataClasses.UserSettings
    RouteSearchActivity -- utilities.dataClasses.PolylineRoute
    RouteSearchActivity -- utilities.dataClasses.NotificationData

    class MapActivity {
        -id: Int
        -task: String
        -locationPermissionRequestCode: Int
        -googleMap: GoogleMap
        -binding: ActivityMapsBinding
        -searchButton: Button
        -pickedName: String
        -pickedLocation: LatLng
        -longPressMarker: Marker
        -convert: Convert
        -internet: Internet
        -database: Database

        ~onCreate(): Void
        ~onMapReady(): Void
        -locationHandle(): Void
        -markerHandle(): Void
        -getLastKnownLocation(): Void
        ~onMapLongClick(): Void
        ~onRequestPermissionsResult(): Void
    }
    MapActivity -- utilities.Convert
    MapActivity -- utilities.Database
    MapActivity -- utilities.Internet
    MapActivity -- utilities.dataClasses.MapData
    MapActivity -- utilities.dataClasses.PolylineRoute

    package utilities <<2>> {
        class Convert {
            +toDataClass(): Transportation[]
            +toLatLng(): LatLng
        }
        Convert -- dataClasses.Transportation

        class Database {
            -db: FirebaseFirestore
            -fileManager: FileManager
            -userSettings: UserSettings
            +getStops: Stop[]
            -formatData(): Stop[]
            -getData(): String, Any
        }
        Database -- dataClasses.Stop

        package dataClasses <<3>> {
            class Stop {
                +name: String
                +location: String
                +type: String[]
            }
            class Transportation {
                +id: String
                +provider: String
                +route: Route[]
            }
            class Route {
                +time: LocalTime
                +stop: String
            }
            class UserSettings {
                +timeBetweenWaiting: Long
                stopsDB: Stop[]
                dbExpiration: LocalDate
            }
            class MapData {
                +name: String
                +location: LatLng
                ~writeToParcel(): Void
                ~describeContents(): Int
            }
            class PolylineRoute {
                +route LatLng[]
                +color: Int
                ~writeToParcel(): Void
                ~describeContents(): Int
            }
            class NotificationData {
                +channelName: String
                +importance: Int
                +text: String
                ~writeToParcel(): Void
                ~describeContents: Int
            }
            Route -right-|> Transportation
            UserSettings -[Hidden]- Route
            UserSettings -- Stop
        }

        class FileManager {
            -userSettingsName: String
            +readPreferences(): UserSettings
            +savePreferences(): Void
            -writeToFile(): Void
            -readFromFile(): String
        }
        FileManager -- UserSettings

        class Internet {
            +getPage(): String
            +fromLatLngToName(): String
            +getDirection(): String
            +getPublicRoute(): String
        }

        class Miscellaneous {
            +findClosestMarker(): Stop
            +getDirections(): LatLng, Long
        }
        Miscellaneous -[Hidden]- AlarmReceiver

        class Notification {
            -notificationId: Int
            -getChannelId(): String
            ~onReceive(): Void
            +send(): Void
            +delay(): Void
        }

        class AlarmReceiver {
            ~onReceive(): Void
        }
        AlarmReceiver -- Notification

        class Trimming {
            -page: String
            +run(): String
            -removeUntil(): Void
            -removeAfter(): Void
            -trimWords(): Void
            -trimTags(): Void
            -tagsAndBetween(): Void
        }
    }
}

@enduml